# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget ttk::vtk::ttkFTCTree ttk::vtk::ttkProgramBase ttk::vtk::ttkTextureMapFromField ttk::vtk::ttkTriangulation ttk::vtk::ttkUserInterfaceBase ttk::vtk::ttkAll)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target ttk::vtk::ttkFTCTree
add_library(ttk::vtk::ttkFTCTree SHARED IMPORTED)

set_target_properties(ttk::vtk::ttkFTCTree PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TTK_ENABLE_KAMIKAZE;TTK_ENABLE_OPENMP"
  INTERFACE_COMPILE_OPTIONS "-fopenmp"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/ttk/vtk"
  INTERFACE_LINK_LIBRARIES "vtksys;vtkCommonCore;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonDataModel;vtkCommonColor;vtkCommonExecutionModel;vtkCommonComputationalGeometry;vtkFiltersCore;vtkFiltersGeneral;vtkImagingCore;vtkImagingFourier;vtkalglib;vtkFiltersStatistics;vtkFiltersExtraction;vtkInfovisCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingCore;/usr/lib/libz.so;/usr/lib/libfreetype.so;vtkRenderingFreeType;vtkRenderingContext2D;vtkChartsCore;vtkDICOMParser;/usr/lib/liblz4.so;vtkIOCore;vtkIOLegacy;/usr/lib/libexpat.so;vtkIOXMLParser;vtkDomainsChemistry;vtkglew;vtkRenderingOpenGL2;vtkDomainsChemistryOpenGL2;vtkIOXML;vtkParallelCore;vtkFiltersAMR;vtkFiltersFlowPaths;vtkFiltersGeneric;vtkImagingSources;vtkFiltersHybrid;vtkFiltersHyperTree;vtkImagingGeneral;vtkFiltersImaging;vtkFiltersModeling;vtkFiltersParallel;vtkParallelMPI;vtkFiltersParallelDIY2;vtkFiltersParallelGeometry;vtkFiltersParallelImaging;vtkFiltersParallelMPI;verdict;vtkFiltersVerdict;vtkFiltersParallelVerdict;vtkFiltersPoints;vtkFiltersProgrammable;/usr/lib64/libpython3.6m.so;vtkWrappingTools;vtkWrappingPythonCore;vtkFiltersPython;vtkFiltersSMP;vtkFiltersSelection;vtkFiltersTexture;vtkFiltersTopology;vtkInteractionStyle;vtkGUISupportQt;vtksqlite;vtkIOSQL;vtkGUISupportQtSQL;vtkmetaio;/usr/lib/libjpeg.so;/usr/lib/libpng.so;/usr/lib/libtiff.so;vtkIOImage;vtkImagingHybrid;vtkInfovisLayout;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkInteractionWidgets;vtkViewsCore;vtkproj4;vtkGeovisCore;/usr/lib64/libhdf5.so;/usr/lib64/libz.so;/usr/lib64/libdl.so;/usr/lib64/libm.so;/usr/lib64/libmpi.so;/usr/lib64/libmpi_cxx.so;/usr/lib64/libhdf5_hl.so;vtkIOAMR;vtkIOEnSight;/usr/lib/libnetcdf.so;vtkexoIIc;vtkIOExodus;vtkgl2ps;vtkRenderingGL2PSOpenGL2;/usr/lib/libhpdf.so;vtkIOExport;vtkIOExportOpenGL2;vtkIOGeometry;vtkIOImport;/usr/lib64/libxml2.so;vtkIOInfovis;vtkIOLSDyna;vtkIOMINC;vtkIOMPIImage;/usr/lib/libnetcdf_c++.so;vtkIONetCDF;/usr/lib/libjsoncpp.so;vtkIOParallel;vtkIOMPIParallel;/usr/lib/libtheoraenc.so;/usr/lib/libtheoradec.so;/usr/lib/libogg.so;vtkIOMovie;vtkIOPLY;vtkIOParallelNetCDF;vtkIOParallelXML;vtkIOTecplotTable;vtkIOVideo;vtkImagingMath;vtkImagingMorphological;vtkImagingStatistics;vtkImagingStencil;vtkInfovisBoostGraphAlgorithms;vtkInteractionImage;vtkParallelMPI4Py;vtkRenderingContextOpenGL2;vtkRenderingImage;vtkRenderingLOD;vtkRenderingLabel;vtkRenderingQt;vtkRenderingVolumeOpenGL2;vtkViewsContext2D;vtkViewsInfovis;vtkViewsGeovis;vtkViewsQt;ttk::base::ftcTree;ttk::base::geometry;ttk::vtk::ttkTriangulation;-fopenmp"
)

# Create imported target ttk::vtk::ttkProgramBase
add_library(ttk::vtk::ttkProgramBase SHARED IMPORTED)

set_target_properties(ttk::vtk::ttkProgramBase PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TTK_ENABLE_KAMIKAZE;TTK_ENABLE_OPENMP"
  INTERFACE_COMPILE_OPTIONS "-fopenmp"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/ttk/vtk"
  INTERFACE_LINK_LIBRARIES "vtksys;vtkCommonCore;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonDataModel;vtkCommonColor;vtkCommonExecutionModel;vtkCommonComputationalGeometry;vtkFiltersCore;vtkFiltersGeneral;vtkImagingCore;vtkImagingFourier;vtkalglib;vtkFiltersStatistics;vtkFiltersExtraction;vtkInfovisCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingCore;/usr/lib/libz.so;/usr/lib/libfreetype.so;vtkRenderingFreeType;vtkRenderingContext2D;vtkChartsCore;vtkDICOMParser;/usr/lib/liblz4.so;vtkIOCore;vtkIOLegacy;/usr/lib/libexpat.so;vtkIOXMLParser;vtkDomainsChemistry;vtkglew;vtkRenderingOpenGL2;vtkDomainsChemistryOpenGL2;vtkIOXML;vtkParallelCore;vtkFiltersAMR;vtkFiltersFlowPaths;vtkFiltersGeneric;vtkImagingSources;vtkFiltersHybrid;vtkFiltersHyperTree;vtkImagingGeneral;vtkFiltersImaging;vtkFiltersModeling;vtkFiltersParallel;vtkParallelMPI;vtkFiltersParallelDIY2;vtkFiltersParallelGeometry;vtkFiltersParallelImaging;vtkFiltersParallelMPI;verdict;vtkFiltersVerdict;vtkFiltersParallelVerdict;vtkFiltersPoints;vtkFiltersProgrammable;/usr/lib64/libpython3.6m.so;vtkWrappingTools;vtkWrappingPythonCore;vtkFiltersPython;vtkFiltersSMP;vtkFiltersSelection;vtkFiltersTexture;vtkFiltersTopology;vtkInteractionStyle;vtkGUISupportQt;vtksqlite;vtkIOSQL;vtkGUISupportQtSQL;vtkmetaio;/usr/lib/libjpeg.so;/usr/lib/libpng.so;/usr/lib/libtiff.so;vtkIOImage;vtkImagingHybrid;vtkInfovisLayout;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkInteractionWidgets;vtkViewsCore;vtkproj4;vtkGeovisCore;/usr/lib64/libhdf5.so;/usr/lib64/libz.so;/usr/lib64/libdl.so;/usr/lib64/libm.so;/usr/lib64/libmpi.so;/usr/lib64/libmpi_cxx.so;/usr/lib64/libhdf5_hl.so;vtkIOAMR;vtkIOEnSight;/usr/lib/libnetcdf.so;vtkexoIIc;vtkIOExodus;vtkgl2ps;vtkRenderingGL2PSOpenGL2;/usr/lib/libhpdf.so;vtkIOExport;vtkIOExportOpenGL2;vtkIOGeometry;vtkIOImport;/usr/lib64/libxml2.so;vtkIOInfovis;vtkIOLSDyna;vtkIOMINC;vtkIOMPIImage;/usr/lib/libnetcdf_c++.so;vtkIONetCDF;/usr/lib/libjsoncpp.so;vtkIOParallel;vtkIOMPIParallel;/usr/lib/libtheoraenc.so;/usr/lib/libtheoradec.so;/usr/lib/libogg.so;vtkIOMovie;vtkIOPLY;vtkIOParallelNetCDF;vtkIOParallelXML;vtkIOTecplotTable;vtkIOVideo;vtkImagingMath;vtkImagingMorphological;vtkImagingStatistics;vtkImagingStencil;vtkInfovisBoostGraphAlgorithms;vtkInteractionImage;vtkParallelMPI4Py;vtkRenderingContextOpenGL2;vtkRenderingImage;vtkRenderingLOD;vtkRenderingLabel;vtkRenderingQt;vtkRenderingVolumeOpenGL2;vtkViewsContext2D;vtkViewsInfovis;vtkViewsGeovis;vtkViewsQt;ttk::base::common;ttk::vtk::ttkTriangulation;-fopenmp"
)

# Create imported target ttk::vtk::ttkTextureMapFromField
add_library(ttk::vtk::ttkTextureMapFromField SHARED IMPORTED)

set_target_properties(ttk::vtk::ttkTextureMapFromField PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TTK_ENABLE_KAMIKAZE;TTK_ENABLE_OPENMP"
  INTERFACE_COMPILE_OPTIONS "-fopenmp"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/ttk/vtk"
  INTERFACE_LINK_LIBRARIES "vtksys;vtkCommonCore;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonDataModel;vtkCommonColor;vtkCommonExecutionModel;vtkCommonComputationalGeometry;vtkFiltersCore;vtkFiltersGeneral;vtkImagingCore;vtkImagingFourier;vtkalglib;vtkFiltersStatistics;vtkFiltersExtraction;vtkInfovisCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingCore;/usr/lib/libz.so;/usr/lib/libfreetype.so;vtkRenderingFreeType;vtkRenderingContext2D;vtkChartsCore;vtkDICOMParser;/usr/lib/liblz4.so;vtkIOCore;vtkIOLegacy;/usr/lib/libexpat.so;vtkIOXMLParser;vtkDomainsChemistry;vtkglew;vtkRenderingOpenGL2;vtkDomainsChemistryOpenGL2;vtkIOXML;vtkParallelCore;vtkFiltersAMR;vtkFiltersFlowPaths;vtkFiltersGeneric;vtkImagingSources;vtkFiltersHybrid;vtkFiltersHyperTree;vtkImagingGeneral;vtkFiltersImaging;vtkFiltersModeling;vtkFiltersParallel;vtkParallelMPI;vtkFiltersParallelDIY2;vtkFiltersParallelGeometry;vtkFiltersParallelImaging;vtkFiltersParallelMPI;verdict;vtkFiltersVerdict;vtkFiltersParallelVerdict;vtkFiltersPoints;vtkFiltersProgrammable;/usr/lib64/libpython3.6m.so;vtkWrappingTools;vtkWrappingPythonCore;vtkFiltersPython;vtkFiltersSMP;vtkFiltersSelection;vtkFiltersTexture;vtkFiltersTopology;vtkInteractionStyle;vtkGUISupportQt;vtksqlite;vtkIOSQL;vtkGUISupportQtSQL;vtkmetaio;/usr/lib/libjpeg.so;/usr/lib/libpng.so;/usr/lib/libtiff.so;vtkIOImage;vtkImagingHybrid;vtkInfovisLayout;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkInteractionWidgets;vtkViewsCore;vtkproj4;vtkGeovisCore;/usr/lib64/libhdf5.so;/usr/lib64/libz.so;/usr/lib64/libdl.so;/usr/lib64/libm.so;/usr/lib64/libmpi.so;/usr/lib64/libmpi_cxx.so;/usr/lib64/libhdf5_hl.so;vtkIOAMR;vtkIOEnSight;/usr/lib/libnetcdf.so;vtkexoIIc;vtkIOExodus;vtkgl2ps;vtkRenderingGL2PSOpenGL2;/usr/lib/libhpdf.so;vtkIOExport;vtkIOExportOpenGL2;vtkIOGeometry;vtkIOImport;/usr/lib64/libxml2.so;vtkIOInfovis;vtkIOLSDyna;vtkIOMINC;vtkIOMPIImage;/usr/lib/libnetcdf_c++.so;vtkIONetCDF;/usr/lib/libjsoncpp.so;vtkIOParallel;vtkIOMPIParallel;/usr/lib/libtheoraenc.so;/usr/lib/libtheoradec.so;/usr/lib/libogg.so;vtkIOMovie;vtkIOPLY;vtkIOParallelNetCDF;vtkIOParallelXML;vtkIOTecplotTable;vtkIOVideo;vtkImagingMath;vtkImagingMorphological;vtkImagingStatistics;vtkImagingStencil;vtkInfovisBoostGraphAlgorithms;vtkInteractionImage;vtkParallelMPI4Py;vtkRenderingContextOpenGL2;vtkRenderingImage;vtkRenderingLOD;vtkRenderingLabel;vtkRenderingQt;vtkRenderingVolumeOpenGL2;vtkViewsContext2D;vtkViewsInfovis;vtkViewsGeovis;vtkViewsQt;ttk::base::common;-fopenmp"
)

# Create imported target ttk::vtk::ttkTriangulation
add_library(ttk::vtk::ttkTriangulation SHARED IMPORTED)

set_target_properties(ttk::vtk::ttkTriangulation PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TTK_ENABLE_KAMIKAZE;TTK_ENABLE_OPENMP"
  INTERFACE_COMPILE_OPTIONS "-fopenmp"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/ttk/vtk"
  INTERFACE_LINK_LIBRARIES "vtksys;vtkCommonCore;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonDataModel;vtkCommonColor;vtkCommonExecutionModel;vtkCommonComputationalGeometry;vtkFiltersCore;vtkFiltersGeneral;vtkImagingCore;vtkImagingFourier;vtkalglib;vtkFiltersStatistics;vtkFiltersExtraction;vtkInfovisCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingCore;/usr/lib/libz.so;/usr/lib/libfreetype.so;vtkRenderingFreeType;vtkRenderingContext2D;vtkChartsCore;vtkDICOMParser;/usr/lib/liblz4.so;vtkIOCore;vtkIOLegacy;/usr/lib/libexpat.so;vtkIOXMLParser;vtkDomainsChemistry;vtkglew;vtkRenderingOpenGL2;vtkDomainsChemistryOpenGL2;vtkIOXML;vtkParallelCore;vtkFiltersAMR;vtkFiltersFlowPaths;vtkFiltersGeneric;vtkImagingSources;vtkFiltersHybrid;vtkFiltersHyperTree;vtkImagingGeneral;vtkFiltersImaging;vtkFiltersModeling;vtkFiltersParallel;vtkParallelMPI;vtkFiltersParallelDIY2;vtkFiltersParallelGeometry;vtkFiltersParallelImaging;vtkFiltersParallelMPI;verdict;vtkFiltersVerdict;vtkFiltersParallelVerdict;vtkFiltersPoints;vtkFiltersProgrammable;/usr/lib64/libpython3.6m.so;vtkWrappingTools;vtkWrappingPythonCore;vtkFiltersPython;vtkFiltersSMP;vtkFiltersSelection;vtkFiltersTexture;vtkFiltersTopology;vtkInteractionStyle;vtkGUISupportQt;vtksqlite;vtkIOSQL;vtkGUISupportQtSQL;vtkmetaio;/usr/lib/libjpeg.so;/usr/lib/libpng.so;/usr/lib/libtiff.so;vtkIOImage;vtkImagingHybrid;vtkInfovisLayout;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkInteractionWidgets;vtkViewsCore;vtkproj4;vtkGeovisCore;/usr/lib64/libhdf5.so;/usr/lib64/libz.so;/usr/lib64/libdl.so;/usr/lib64/libm.so;/usr/lib64/libmpi.so;/usr/lib64/libmpi_cxx.so;/usr/lib64/libhdf5_hl.so;vtkIOAMR;vtkIOEnSight;/usr/lib/libnetcdf.so;vtkexoIIc;vtkIOExodus;vtkgl2ps;vtkRenderingGL2PSOpenGL2;/usr/lib/libhpdf.so;vtkIOExport;vtkIOExportOpenGL2;vtkIOGeometry;vtkIOImport;/usr/lib64/libxml2.so;vtkIOInfovis;vtkIOLSDyna;vtkIOMINC;vtkIOMPIImage;/usr/lib/libnetcdf_c++.so;vtkIONetCDF;/usr/lib/libjsoncpp.so;vtkIOParallel;vtkIOMPIParallel;/usr/lib/libtheoraenc.so;/usr/lib/libtheoradec.so;/usr/lib/libogg.so;vtkIOMovie;vtkIOPLY;vtkIOParallelNetCDF;vtkIOParallelXML;vtkIOTecplotTable;vtkIOVideo;vtkImagingMath;vtkImagingMorphological;vtkImagingStatistics;vtkImagingStencil;vtkInfovisBoostGraphAlgorithms;vtkInteractionImage;vtkParallelMPI4Py;vtkRenderingContextOpenGL2;vtkRenderingImage;vtkRenderingLOD;vtkRenderingLabel;vtkRenderingQt;vtkRenderingVolumeOpenGL2;vtkViewsContext2D;vtkViewsInfovis;vtkViewsGeovis;vtkViewsQt;ttk::base::triangulation;-fopenmp"
)

# Create imported target ttk::vtk::ttkUserInterfaceBase
add_library(ttk::vtk::ttkUserInterfaceBase SHARED IMPORTED)

set_target_properties(ttk::vtk::ttkUserInterfaceBase PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TTK_ENABLE_KAMIKAZE;TTK_ENABLE_OPENMP"
  INTERFACE_COMPILE_OPTIONS "-fopenmp"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/ttk/vtk"
  INTERFACE_LINK_LIBRARIES "vtksys;vtkCommonCore;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonDataModel;vtkCommonColor;vtkCommonExecutionModel;vtkCommonComputationalGeometry;vtkFiltersCore;vtkFiltersGeneral;vtkImagingCore;vtkImagingFourier;vtkalglib;vtkFiltersStatistics;vtkFiltersExtraction;vtkInfovisCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingCore;/usr/lib/libz.so;/usr/lib/libfreetype.so;vtkRenderingFreeType;vtkRenderingContext2D;vtkChartsCore;vtkDICOMParser;/usr/lib/liblz4.so;vtkIOCore;vtkIOLegacy;/usr/lib/libexpat.so;vtkIOXMLParser;vtkDomainsChemistry;vtkglew;vtkRenderingOpenGL2;vtkDomainsChemistryOpenGL2;vtkIOXML;vtkParallelCore;vtkFiltersAMR;vtkFiltersFlowPaths;vtkFiltersGeneric;vtkImagingSources;vtkFiltersHybrid;vtkFiltersHyperTree;vtkImagingGeneral;vtkFiltersImaging;vtkFiltersModeling;vtkFiltersParallel;vtkParallelMPI;vtkFiltersParallelDIY2;vtkFiltersParallelGeometry;vtkFiltersParallelImaging;vtkFiltersParallelMPI;verdict;vtkFiltersVerdict;vtkFiltersParallelVerdict;vtkFiltersPoints;vtkFiltersProgrammable;/usr/lib64/libpython3.6m.so;vtkWrappingTools;vtkWrappingPythonCore;vtkFiltersPython;vtkFiltersSMP;vtkFiltersSelection;vtkFiltersTexture;vtkFiltersTopology;vtkInteractionStyle;vtkGUISupportQt;vtksqlite;vtkIOSQL;vtkGUISupportQtSQL;vtkmetaio;/usr/lib/libjpeg.so;/usr/lib/libpng.so;/usr/lib/libtiff.so;vtkIOImage;vtkImagingHybrid;vtkInfovisLayout;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkInteractionWidgets;vtkViewsCore;vtkproj4;vtkGeovisCore;/usr/lib64/libhdf5.so;/usr/lib64/libz.so;/usr/lib64/libdl.so;/usr/lib64/libm.so;/usr/lib64/libmpi.so;/usr/lib64/libmpi_cxx.so;/usr/lib64/libhdf5_hl.so;vtkIOAMR;vtkIOEnSight;/usr/lib/libnetcdf.so;vtkexoIIc;vtkIOExodus;vtkgl2ps;vtkRenderingGL2PSOpenGL2;/usr/lib/libhpdf.so;vtkIOExport;vtkIOExportOpenGL2;vtkIOGeometry;vtkIOImport;/usr/lib64/libxml2.so;vtkIOInfovis;vtkIOLSDyna;vtkIOMINC;vtkIOMPIImage;/usr/lib/libnetcdf_c++.so;vtkIONetCDF;/usr/lib/libjsoncpp.so;vtkIOParallel;vtkIOMPIParallel;/usr/lib/libtheoraenc.so;/usr/lib/libtheoradec.so;/usr/lib/libogg.so;vtkIOMovie;vtkIOPLY;vtkIOParallelNetCDF;vtkIOParallelXML;vtkIOTecplotTable;vtkIOVideo;vtkImagingMath;vtkImagingMorphological;vtkImagingStatistics;vtkImagingStencil;vtkInfovisBoostGraphAlgorithms;vtkInteractionImage;vtkParallelMPI4Py;vtkRenderingContextOpenGL2;vtkRenderingImage;vtkRenderingLOD;vtkRenderingLabel;vtkRenderingQt;vtkRenderingVolumeOpenGL2;vtkViewsContext2D;vtkViewsInfovis;vtkViewsGeovis;vtkViewsQt;ttk::vtk::ttkProgramBase;ttk::vtk::ttkTextureMapFromField;-fopenmp"
)

# Create imported target ttk::vtk::ttkAll
add_library(ttk::vtk::ttkAll INTERFACE IMPORTED)

set_target_properties(ttk::vtk::ttkAll PROPERTIES
  INTERFACE_LINK_LIBRARIES "ttk::vtk::ttkUserInterfaceBase;ttk::vtk::ttkTriangulation;ttk::vtk::ttkTextureMapFromField;ttk::vtk::ttkProgramBase;ttk::vtk::ttkFTCTree"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/TTKVTKConfig-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "ttk::base::ftcTree" "ttk::base::geometry" "ttk::base::common" "ttk::base::triangulation" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
